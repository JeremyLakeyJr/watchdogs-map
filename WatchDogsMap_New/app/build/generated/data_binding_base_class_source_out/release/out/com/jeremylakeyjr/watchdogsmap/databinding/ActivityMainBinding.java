// Generated by view binder compiler. Do not edit!
package com.jeremylakeyjr.watchdogsmap.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.jeremylakeyjr.watchdogsmap.R;
import com.mapbox.maps.MapView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RadioButton cycling;

  @NonNull
  public final RadioButton driving;

  @NonNull
  public final Button hackButton;

  @NonNull
  public final ImageButton infoCloseButton;

  @NonNull
  public final TextView infoDescription;

  @NonNull
  public final CardView infoPopup;

  @NonNull
  public final TextView infoTitle;

  @NonNull
  public final MapView mapView;

  @NonNull
  public final Button navigateButton;

  @NonNull
  public final RadioGroup routingProfiles;

  @NonNull
  public final CardView searchCard;

  @NonNull
  public final RecyclerView searchResultsRecyclerView;

  @NonNull
  public final SearchView searchView;

  @NonNull
  public final CardView turnInstructionsCard;

  @NonNull
  public final RecyclerView turnInstructionsRecyclerView;

  @NonNull
  public final RadioButton walking;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull RadioButton cycling,
      @NonNull RadioButton driving, @NonNull Button hackButton,
      @NonNull ImageButton infoCloseButton, @NonNull TextView infoDescription,
      @NonNull CardView infoPopup, @NonNull TextView infoTitle, @NonNull MapView mapView,
      @NonNull Button navigateButton, @NonNull RadioGroup routingProfiles,
      @NonNull CardView searchCard, @NonNull RecyclerView searchResultsRecyclerView,
      @NonNull SearchView searchView, @NonNull CardView turnInstructionsCard,
      @NonNull RecyclerView turnInstructionsRecyclerView, @NonNull RadioButton walking) {
    this.rootView = rootView;
    this.cycling = cycling;
    this.driving = driving;
    this.hackButton = hackButton;
    this.infoCloseButton = infoCloseButton;
    this.infoDescription = infoDescription;
    this.infoPopup = infoPopup;
    this.infoTitle = infoTitle;
    this.mapView = mapView;
    this.navigateButton = navigateButton;
    this.routingProfiles = routingProfiles;
    this.searchCard = searchCard;
    this.searchResultsRecyclerView = searchResultsRecyclerView;
    this.searchView = searchView;
    this.turnInstructionsCard = turnInstructionsCard;
    this.turnInstructionsRecyclerView = turnInstructionsRecyclerView;
    this.walking = walking;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cycling;
      RadioButton cycling = ViewBindings.findChildViewById(rootView, id);
      if (cycling == null) {
        break missingId;
      }

      id = R.id.driving;
      RadioButton driving = ViewBindings.findChildViewById(rootView, id);
      if (driving == null) {
        break missingId;
      }

      id = R.id.hack_button;
      Button hackButton = ViewBindings.findChildViewById(rootView, id);
      if (hackButton == null) {
        break missingId;
      }

      id = R.id.info_close_button;
      ImageButton infoCloseButton = ViewBindings.findChildViewById(rootView, id);
      if (infoCloseButton == null) {
        break missingId;
      }

      id = R.id.info_description;
      TextView infoDescription = ViewBindings.findChildViewById(rootView, id);
      if (infoDescription == null) {
        break missingId;
      }

      id = R.id.info_popup;
      CardView infoPopup = ViewBindings.findChildViewById(rootView, id);
      if (infoPopup == null) {
        break missingId;
      }

      id = R.id.info_title;
      TextView infoTitle = ViewBindings.findChildViewById(rootView, id);
      if (infoTitle == null) {
        break missingId;
      }

      id = R.id.mapView;
      MapView mapView = ViewBindings.findChildViewById(rootView, id);
      if (mapView == null) {
        break missingId;
      }

      id = R.id.navigate_button;
      Button navigateButton = ViewBindings.findChildViewById(rootView, id);
      if (navigateButton == null) {
        break missingId;
      }

      id = R.id.routingProfiles;
      RadioGroup routingProfiles = ViewBindings.findChildViewById(rootView, id);
      if (routingProfiles == null) {
        break missingId;
      }

      id = R.id.search_card;
      CardView searchCard = ViewBindings.findChildViewById(rootView, id);
      if (searchCard == null) {
        break missingId;
      }

      id = R.id.searchResultsRecyclerView;
      RecyclerView searchResultsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (searchResultsRecyclerView == null) {
        break missingId;
      }

      id = R.id.searchView;
      SearchView searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      id = R.id.turn_instructions_card;
      CardView turnInstructionsCard = ViewBindings.findChildViewById(rootView, id);
      if (turnInstructionsCard == null) {
        break missingId;
      }

      id = R.id.turnInstructionsRecyclerView;
      RecyclerView turnInstructionsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (turnInstructionsRecyclerView == null) {
        break missingId;
      }

      id = R.id.walking;
      RadioButton walking = ViewBindings.findChildViewById(rootView, id);
      if (walking == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, cycling, driving, hackButton,
          infoCloseButton, infoDescription, infoPopup, infoTitle, mapView, navigateButton,
          routingProfiles, searchCard, searchResultsRecyclerView, searchView, turnInstructionsCard,
          turnInstructionsRecyclerView, walking);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
